{"version":3,"sources":["routes/Home.js","utils/api.js","components/Card.js","components/GameUI.js","routes/Room.js","App.js","serviceWorker.js","index.js","config.js"],"names":["HomeStyles","styled","div","InputStyle","input","Home","React","useState","nameInput","setNameInput","className","type","value","placeholder","onChange","e","target","CreateOrJoinRoom","name","viewState","setViewState","roomCodeInput","setRoomCodeInput","redirect","setRedirect","handleJoinRoom","length","room","axios","post","config","api","then","res","data","catch","err","console","log","joinRoom","pathname","state","handleCreateRoom","createRoom","onClick","showView","to","CardStyle","props","me","css","deck","player","Card","UIStyles","GameUI","socketRef","playerName","Fragment","JSON","stringify","game","roles","playerRoles","narration","current","emit","map","Room","match","location","params","roomID","useRef","uiState","setUIState","handleOptChange","option","useEffect","io","connect","on","players","roomState","deckOpts","Object","keys","opt","i","key","checked","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.206868c4.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport { createRoom, joinRoom } from '../utils/api';\nimport { Redirect } from 'react-router-dom';\n\nconst HomeStyles = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  align-content: center;\n  height: 100vh;\n  color: hotpink;\n  .logo {\n    margin: 0 0 1rem 0;\n    font-size: 5rem;\n  }\n  button {\n    font-size: 1.3rem;\n    background: none;\n    border: 4px solid hotpink;\n    border-radius: 10px;\n    width: 15rem;\n    height: 4rem;\n    margin-top: 2rem;\n    font-weight: 600;\n    color: hotpink;\n    cursor: pointer;\n  }\n\n  .flx {\n    display: flex;\n    flex-flow: column;\n    justify-items: center;\n    align-items: center;\n  }\n`;\n\nconst InputStyle = styled.input`\n  margin-top: 1rem;\n  width: 15rem;\n  height: 3rem;\n  border: 3px solid hotpink;\n  border-radius: 7px;\n  color: hotpink;\n  font-size: 1.3rem;\n  padding: 0 0.4rem;\n  text-align: center;\n`\n\nexport default function Home() {\n    const [nameInput, setNameInput] = React.useState('');\n    return (\n      <HomeStyles className=\"App\">\n        <h1 className=\"logo\">Werewolf Online</h1>\n        <div>\n            <InputStyle type=\"text\" value={nameInput} placeholder=\"Join as\" onChange={(e) => setNameInput(e.target.value)} />\n        </div>\n        <CreateOrJoinRoom name={nameInput} />\n    </HomeStyles>\n    );\n}\n\nfunction CreateOrJoinRoom({ name }) {\n    const [viewState, setViewState] = React.useState(0);\n    const [roomCodeInput, setRoomCodeInput] = React.useState('');\n    const [redirect, setRedirect] = React.useState(false);\n    function handleJoinRoom() {\n        if (name.length > 0 && roomCodeInput.length === 4) {\n            joinRoom(name, roomCodeInput)\n                .then(data => {\n                    setRedirect({ pathname: `room/${data.room}`, state: { name }});\n                });\n        }\n    }\n    function handleCreateRoom() {\n        if (name.length > 0) {\n            createRoom(name)\n                .then(data => {\n                    setRedirect({ pathname: `room/${data.room}`, state: { name }});\n                });\n        }\n    }\n    function showView(state) {\n        switch(state) {\n            case 0:\n                return (\n                    <div className=\"flx\">\n                    <button onClick={handleCreateRoom}>CREATE ROOM</button>\n                        <button onClick={() => setViewState(1)}>JOIN ROOM</button>\n                    </div>\n                )\n            case 1:\n                return (\n                    <div className=\"flx\">\n                        <InputStyle type=\"text\" value={roomCodeInput} placeholder=\"Room Code\" onChange={(e) => setRoomCodeInput(e.target.value)} />\n                        <button onClick={handleJoinRoom}>Join Room</button>\n                    </div>\n                )\n        }\n    }\n    return (\n    <div>\n        {showView(viewState)}\n        {redirect && <Redirect to={redirect} />}\n    </div>\n    );\n}","import axios from 'axios';\nimport config from '../config';\nimport io from 'socket.io-client';\n\nexport function createRoom(name) {\n    return axios.post(`${config.api}/create-room`, { name })\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            console.log(err);\n            return {};\n        });\n}\n\nexport function joinRoom(name, room) {\n    return axios.post(`${config.api}/join-room`, {\n        name, room\n    })\n        .then(res => {\n            return res.data;\n        })\n        .catch(err => {\n            console.log(err);\n            return {};\n        })\n}\n\nexport function connectSocket() {\n    return io.connect(config.api);\n}","import React from 'react'\nimport styled, {css} from 'styled-components'\n\nconst CardStyle = styled.div`\n  height: 12rem;\n  width: 9rem;\n  background: pink;\n  border-radius: 13px;\n  box-shadow: 0 0.2rem 1rem rgba(0, 0, 0, 0.15);\n  display: flex;\n  color: #fff;\n  justify-content: center;\n  align-items: center;\n  h1 {\n    font-size: 7rem;\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n  }\n\n  ${(props) => props.me &&\n    css`\n    height: 35rem;\n    width: 21rem;\n   border: 5px solid deeppink;\n  `}\n  ${(props) => props.deck &&\n    css`\n    height: 11rem;\n    width: 8rem;\n    border: 5px solid darkcyan;\n  `}\n  ${(props) => props.player &&\n    css`\n    border: 5px solid purple;\n    height: 17rem;\n    width: 11rem;\n  `}\n`\n\nconst Card = ({me, deck, player}) => {\n\n  return (\n    <CardStyle me={me} player={player} deck={deck}>\n    <h1>X</h1>\n    </CardStyle>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport styled from 'styled-components'\nimport Card from './Card'\nconst UIStyles = styled.div`\n   margin-top: 5%;\n  margin-right: 10%;\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  justify-items: center;\n   grid-template-columns: 0.4fr 0.6fr;\n   grid-template-rows: 0.7fr 0.3fr;\n   grid-template-areas: \n    \"leftSide header\"\n    \"leftSide  rightSide\";\n  div {\n    display: flex;\n    margin-left: 1rem;\n    margin-top: 1rem;\n  }\n  .deck {\n    grid-area: header;\n  }\n  .me {\n    grid-area: leftSide;\n  }\n  .deck {\n    grid-area: header;\n  }\n\n  .flx {\n    color: gray;\n    h4 {\n      margin: 0;\n      text-align: center;\n    }\n    display: flex;\n    flex-flow: column;\n  }\n`\n\n\nexport default function GameUI({ state, socketRef, playerName, room }) {\n  const player = ['P1','P2','P3','P4']\n  function submitConfirm() {\n    socketRef.current.emit('submit confirm', { room, playerName });\n  }\n  return (\n    <React.Fragment>\n      <div>\n        Game started with deck:\n        {JSON.stringify(state.game.deck)}\n        <br />\n        Your role:\n        {state.game.roles.playerRoles[playerName]}\n        <br />\n        Narration:\n        {state.narration}\n        <br />\n        <button onClick={submitConfirm}>Confirm</button>\n      </div>\n    <UIStyles>\n      <div className=\"deck\"> \n        <Card deck={true}/>\n        <Card deck={true}/>\n        <Card deck={true}/>\n      </div>\n        <div className=\"me\"> \n          <Card me={true} />\n        </div>\n      <div className=\"otherPlayers\">\n        {player.map((player) => (\n         <div className=\"flx\">\n          <h4>${player}</h4>\n          <Card player={true}/>\n        </div>\n      ))}\n      </div>\n    </UIStyles>\n    </React.Fragment>\n  )\n}\n\n// {\n//   \"game\": {\n//     \"deck\": { },\n//     \"players\": [\"sadad\", \"wwww\", \"eee\", \"rrrr\"]\n//   },\n//   \"players\": [\"sadad\", \"wwww\", \"eee\", \"rrrr\"],\n//   \"roomState\": \"started\"\n// }\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connectSocket } from '../utils/api';\nimport GameUI from '../components/GameUI';\n\nexport default function Room({ match, location }) {\n    const room = match.params.roomID;\n    const playerName = location.state && location.state.name;\n    const socketRef = React.useRef();\n    const [uiState, setUIState] = React.useState({});\n    \n    useEffect(() => {\n        if (playerName) {\n            socketRef.current = connectSocket();\n            socketRef.current.emit('join room', { room, playerName });\n            socketRef.current.on('update state', state => {\n                console.log(state);\n                setUIState(state);\n            });\n        }\n    }, []);\n\n    function startGame() {\n        socketRef.current.emit('start game', { room });\n    }\n\n    function handleOptChange(e) {\n        socketRef.current.emit('toggle deck option', { room, option: e.target.value})\n    }\n\n    return (\n        <div>\n            <div>\n                {!playerName && <Redirect to={'/'} />}\n                This is room {room}.\n                <br />\n                Your name is {playerName}.\n            </div>\n            <div>\n                Players in room:\n                {JSON.stringify(uiState.players)}\n            </div>\n            {uiState.roomState !== 'started' && uiState.deckOpts && (\n                <div>\n                    <ul>\n                        {Object.keys(uiState.deckOpts).map((opt, i) => (\n                        <li key={i}>\n                            <input \n                                type=\"radio\" \n                                value={opt} \n                                checked={uiState.deckOpts[opt]} \n                                onClick={handleOptChange}\n                                onChange={(e) => console.log(e)}\n                            /> {opt}\n                        </li>))}\n                    </ul>\n                </div>\n            )}\n            {uiState.roomState === 'ready' && <button onClick={startGame}>Start Game</button>}\n            {uiState.roomState === 'started' && <GameUI state={uiState} playerName={playerName} room={room} socketRef={socketRef}/>}\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Room from './routes/Room';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n      <Switch>\n        <Route exact path=\"/\" component={Home}>\n        </Route>\n        <Route path=\"/room/:roomID\" component={Room}>\n        </Route>\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\nmodule.exports = {\n    api: process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://still-oasis-65835.herokuapp.com'\n}"],"sourceRoot":""}